buildscript {
    ext.kotlin_version = '1.5.10'
    ext {
        springBootVersion = '2.1.7.RELEASE'
        queryDslVersion = "4.2.2"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath("org.jetbrains.kotlin:kotlin-allopen:$kotlin_version")
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-jpa' // @entity -> no-arg
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-allopen' // @entity -> open
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'krescere'
version '0.0.1-SNAPSHOT'
sourceCompatibility = "11"

repositories {
    mavenCentral()
}

dependencies {
    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // lombok
    implementation('org.projectlombok:lombok:1.18.22')
    implementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    annotationProcessor('org.projectlombok:lombok:1.18.22')
    testImplementation('org.projectlombok:lombok:1.18.22')
    testAnnotationProcessor('org.projectlombok:lombok:1.18.22')
    // 내장 DB
    implementation('com.h2database:h2')
    // MariaDB
    implementation("org.mariadb.jdbc:mariadb-java-client")
    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    // kotlin-reflect
    implementation("org.jetbrains.kotlin:kotlin-reflect:$kotlin_version")
    // kotlin-jackson
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
    // gson
    implementation("com.google.code.gson:gson:2.8.9")
    // AspectJ
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    // validation
    implementation("org.springframework.boot:spring-boot-starter-validation")
    // QueryDSL
    implementation("com.querydsl:querydsl-jpa:${queryDslVersion}")
    annotationProcessor("javax.persistence:javax.persistence-api",
            "javax.annotation:javax.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jpa")
    // hibernate-spatial
    implementation("org.hibernate:hibernate-spatial:5.4.17.Final")
    // apache httpclient
    implementation('org.apache.httpcomponents:httpclient:4.5.14')
    // test security (권한을 필요로하는 api 호출을 위한)
    testImplementation('org.springframework.security:spring-security-test')
    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
// QueryDSL
sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
        }
    }
}
targetCompatibility = JavaVersion.VERSION_11
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
